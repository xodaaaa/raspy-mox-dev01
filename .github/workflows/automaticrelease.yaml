name: Release
run-name: Release ${{ github.ref_name }} (${{ github.event.inputs.version }}) - Debian ARM64

on:
  workflow_dispatch:
    inputs:
      version:
        type: choice
        description: Select version
        options: ["3.x"]
  push:
    tags:
      - "v3.*"  # Tags deben ser v3.X.X (ej: v3.2.6-1)
    branches:
      - main    # Se ejecuta en push a main
  schedule:
    - cron: '0 3 * * *' # Todos los días a las 3:00 UTC

jobs:
  build:
    permissions:
      contents: write
      id-token: write  # Necesario para autenticación OIDC
    runs-on: ubuntu-22.04
    env:
      DEB_DIST: "Debian/Bookworm"
      BASE_IMAGE: "debian:bookworm-slim"

    steps:
    - name: Liberar espacio en disco
      run: |
        sudo rm -rf /usr/local/.ghcup
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /usr/share/dotnet
        df -h

    - name: Checkout del código
      uses: actions/checkout@v4

    - name: Configurar QEMU
      uses: docker/setup-qemu-action@v3

    - name: Configurar Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Construir paquetes
      id: build
      run: |
        # Construir imágenes Docker
        if [ "${RUNNER_DEBUG}" = "1" ]; then
          build_options="cross github debug"
        else
          build_options="cross github"
        fi

        docker buildx build \
          -o packages \
          --build-arg buildoptions="$build_options" \
          --build-arg baseimage=$BASE_IMAGE \
          --platform linux/amd64 \
          -f .github/Dockerfile.crosscompile-arm64 .

        # Verificar existencia de paquetes
        if [ ! -d "packages" ]; then
          echo "❌ Error: No se generaron paquetes .deb"
          exit 1
        fi

        # Extraer versión del paquete
        DEB_VERSION=$(dpkg --info packages/proxmox-backup-server_*.deb | awk -F': ' '/Version/ {print $2}')
        echo "Versión construida: $DEB_VERSION"
        echo "DEB_VERSION=$DEB_VERSION" >> $GITHUB_ENV

    - name: Pruebas de instalación
      run: |
        docker buildx build \
          --build-arg baseimage=$BASE_IMAGE \
          --platform linux/arm64 \
          -f .github/Dockerfile.installtest .

    - name: Publicar Release
      uses: softprops/action-gh-release@v1
      if: success()
      with:
        tag_name: ${{ env.DEB_VERSION }}
        name: "v${{ env.DEB_VERSION }} (${{ env.DEB_DIST }})"
        body: |
          🚀 Proxmox Backup Server ARM64
          - Versión: ${{ env.DEB_VERSION }}
          - Distribución: ${{ env.DEB_DIST }}
          - Compilado: $(date -u +'%Y-%m-%d %H:%M:%S UTC')
        draft: false
        prerelease: false
        generate_release_notes: true
        files: |
          packages/*.deb
